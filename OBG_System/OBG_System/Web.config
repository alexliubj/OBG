<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <connectionStrings>
    <clear />
    <remove name="LocalSqlServer" />
    <add name="LocalSqlServer" connectionString="Data Source=tcp:sql.discountasp.net;Initial Catalog=SQL_numid_account;User ID=SQL_numid_user;Password=pw_here" providerName="System.Data.SqlClient" />
    <!--<add name="OBG_Local" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=OBG_;Integrated Security=True" providerName="System.Data.SqlClient" />-->
    <add name="OBG_Local" connectionString="Data Source=184.168.194.60;Initial Catalog=OBG_;Integrated Security=False;User ID=obgtest;Password=obgTest1234" />
    <add name="OBG_Remote" connectionString="Data Source=184.168.194.60;Initial Catalog=OBG_;Integrated Security=True;User ID=obgtest;Password=obgTest1234" providerName="System.Data.SqlClient" />
    <add name="DefaultConnection" providerName="System.Data.SqlClient" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=aspnet-OBG_System-20140607190914;Integrated Security=SSPI" />
  </connectionStrings>
  <system.web>

    <!--# Generates a <machineKey>
    element that can be copied + pasted into a Web.config file.-->
    <!--function Generate-MachineKey {
    [CmdletBinding()]
    param (
    [ValidateSet("AES", "DES", "3DES")]
    [string]$decryptionAlgorithm = 'AES',
    [ValidateSet("MD5", "SHA1", "HMACSHA256", "HMACSHA384", "HMACSHA512")]
    [string]$validationAlgorithm = 'HMACSHA256'
    )
    process {
    function BinaryToHex {
    [CmdLetBinding()]
    param($bytes)
    process {
    $builder = new-object System.Text.StringBuilder
    foreach ($b in $bytes) {
    $builder = $builder.AppendFormat([System.Globalization.CultureInfo]::InvariantCulture, "{0:X2}", $b)
    }
    $builder
    }
    }
    switch ($decryptionAlgorithm) {
    "AES" { $decryptionObject = new-object System.Security.Cryptography.AesCryptoServiceProvider }
    "DES" { $decryptionObject = new-object System.Security.Cryptography.DESCryptoServiceProvider }
    "3DES" { $decryptionObject = new-object System.Security.Cryptography.TripleDESCryptoServiceProvider }
    }
    $decryptionObject.GenerateKey()
    $decryptionKey = BinaryToHex($decryptionObject.Key)
    $decryptionObject.Dispose()
    switch ($validationAlgorithm) {
    "MD5" { $validationObject = new-object System.Security.Cryptography.HMACMD5 }
    "SHA1" { $validationObject = new-object System.Security.Cryptography.HMACSHA1 }
    "HMACSHA256" { $validationObject = new-object System.Security.Cryptography.HMACSHA256 }
    "HMACSHA385" { $validationObject = new-object System.Security.Cryptography.HMACSHA384 }
    "HMACSHA512" { $validationObject = new-object System.Security.Cryptography.HMACSHA512 }
    }
    $validationKey = BinaryToHex($validationObject.Key)
    $validationObject.Dispose()
    [string]::Format([System.Globalization.CultureInfo]::InvariantCulture,
    "<machineKey decryption='"{0}'"  decryptionKey='"{1}'" validation='"{2}'" validationKey='"{3}'" />",
 $decryptionAlgorithm.ToUpperInvariant(), $decryptionKey，
  $validationAlgorithm.ToUpperInvariant(), $validationKey)
  }
}-->
    <trust level="Full" originUrl=""/>
    <machineKey
validationKey="86B6275BA31D3D713E41388692FCA68F7D20269411345AA1C17A7386DACC9C46E7CE5F97F556F3CF0A07159659E2706B77731779D2DA4B53BC47BFFD4FD48A54"
decryptionKey="9421E53E196BB56DB11B9C25197A2AD470638EFBC604AC74CD29DBBCF79D6046"
validation="SHA1"
decryption="AES"
/>
    <pages validateRequest="false" enableSessionState="true" enableViewStateMac="false" enableViewState="true"/>
    
    <httpRuntime maxRequestLength="1048576" executionTimeout="3600"/>
    <customErrors mode="Off" />
    <!--<customErrors mode="RemoteOnly" defaultRedirect="mycustompage.aspx"/>-->
    <compilation debug="true" strict="false" explicit="true" targetFramework="4.0" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login.aspx" timeout="180" />
	
    </authentication>
    <profile defaultProvider="DefaultProfileProvider">
      <providers>
        <clear />
        <!--<add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="ApplicationServices" applicationName="/" />-->
        <add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </profile>
    <roleManager enabled="false" defaultProvider="DefaultRoleProvider">
      <providers>
        <clear />
        <!--<add name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" connectionStringName="ApplicationServices" applicationName="/" />-->
        <add name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider" applicationName="/" />
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
      </providers>
    </roleManager>
    <membership defaultProvider="DefaultMembershipProvider">
      <!--<providers>
        <clear />
        <add name="AspNetSqlMembershipProvider" type="System.Web.Providers.AspNetSqlMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>-->
      <providers>
        <add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
      -->
    <!--<sessionState mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" timeout="180">-->
    <sessionState mode="InProc" timeout="180">
    <!--<sessionState 
            mode="SQLServer"
            sqlConnectionString="data source=184.168.194.60;user id=obgtest;password=obgTest1234"
            cookieless="false" 
            timeout="180" 
    >-->
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
      </providers>
    </sessionState>
  </system.web>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
  </system.webServer>
</configuration>